<?xml version="1.0"?>
<launch>

    <arg name="model" default="$(find qingzhou_description)/urdf/qingzhou_multi.urdf.xacro"/>
    <arg name="robot" default="qingzhou_0"/>
    <arg name="namespace" default="/$(arg robot)" />
    <!--arg name="world_name" value="$(find qingzhou_gazebo)/worlds/playground.world" /-->
    <arg name="world_name" value="$(find qingzhou_gazebo)/worlds/myworld_V1.world" />
    <arg name="cmd_timeout" default="0.5"/>
    <arg name="x" default="0.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="1.0" />
    <arg name="roll" default="0.0"/>
    <arg name="pitch" default="0.0"/>
    <arg name="yaw" default="0.0"/>

        <!-- Gazebo  -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" default="$(arg world_name)"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>
    <group ns="$(arg namespace)">
        <!-- Load the robot description -->
        <param name="robot_description" command="$(find xacro)/xacro $(arg model) namespace:=$(arg namespace) bodyframe:=$(arg namespace) " />

        <!-- Load ros_controllers configuration parameters -->
        <rosparam file="$(find qingzhou_control)/config/ctrl_ackermann_steering_controller.yaml" command="load" ns="$(arg namespace)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_gains.yaml" command="load" ns="$(arg namespace)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_joint_state_publisher.yaml" command="load" ns="$(arg namespace)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_qingzhou_hardware_gazebo.yaml" command="load" ns="$(arg namespace)" />

        <!-- Spawn the controllers -->
        <node pkg="controller_manager" type="spawner" name="controller_spawner" ns="$(arg namespace)"
            args="joint_state_publisher ackermann_steering_controller"
            output="screen" respawn="false" >
            <param name="tf_prefix" value="$(arg namespace)" />
         </node>

        <!-- Launch  the robot state publisher -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
            <param name="publish_frequency" value="50.0"/>
            <param name="tf_prefix" value="$(arg namespace)" />
        </node>

        <!-- Launch a rqt steering GUI for publishing to /qingzhou/steer_drive_controller/cmd_vel -->
        <!-- <node pkg="rqt_robot_steering" type="rqt_robot_steering" name="rqt_robot_steering" >
            <param name="default_topic" value="$(arg namespace)/ackermann_steering_controller/cmd_vel"/>
        </node> -->

        <!-- Spawn robot in Gazebo -->
        <node name="spawn_vehicle" pkg="gazebo_ros" type="spawn_model"
            args="-urdf -param robot_description -model $(arg namespace)
                -gazebo_namespace /gazebo
                -x $(arg x) -y $(arg y) -z $(arg z)
                -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"
             output="screen" />

    <!--node pkg="tf" type="static_transform_publisher" name="ydlidar_link_to_laser" args="0.0 0.0 0.0 0.0 1 0  $(arg namespace)/ydlidar_link $(arg namespace)/base_link  20" /-->
    <!--node pkg="tf" type="static_transform_publisher" name="camera_link_to_bot" args="0.0 0.0 0.0 3.14 0  0    $(arg namespace)/camera_link  $(arg namespace)/base_link  20" /-->

    <!--node pkg="qingzhou_description" type="gazebo_odometry.py" name="gazebo_odometry" output="screen" >
        <remap from="odom" to="$(arg namespace)/odom" />
        <remap from="/qingzhou/gazebo/link_states" to="gazebo/link_states" />
    </node-->
    </group>
    <!--node pkg="tf" type="static_transform_publisher" name="tf_map1" args="0 0 0.0 0 1 0 world qingzhou1/map 33"/-->
    <!--node pkg="tf" type="static_transform_publisher" name="tf_mapodom1" args="0 0 0.0 0 0 0 map qingzhou1/odom  33"/-->
    <!--node pkg="tf" type="static_transform_publisher" name="tf_odom1" args="0 0 0.0 0 0 0 $(arg namespace)/odom $(arg namespace)/base_link 33"/-->
</launch>
